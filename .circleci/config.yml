# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6-node
        environment:
          RAILS_ENV: test
      - image: circleci/postgres

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install system libs
          command: |
            sudo apt install -y postgresql-client || true

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: install docker compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - setup_remote_docker

      - run:
          name: start stack
          command: |
            docker-compose up -d
            docker-compose exec rails bundle exec rails db:create
            docker-compose exec rails bundle exec rails db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            docker-compose exec rails mkdir /tmp/test-results

            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            docker-compose exec rails bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

            docker cp rails:/tmp/test-results/rspec.xml /tmp/test-results/rspec.xml

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  rubocop:
    docker:
      - image: circleci/ruby:2.6-node
        environment:
          RAILS_ENV: development
    steps:
      - checkout
      - run:
          name: install rubocop
          command: |
            gem install rubocop
      - run: rubocop

workflows:
  version: 2
  build:
    jobs:
      - build
      - rubocop