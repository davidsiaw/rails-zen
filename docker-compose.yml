version: '3.7'
services:
  db:
    image: postgres:alpine
    container_name: db
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
  redis:
    image: 'redis:alpine'
  pgadmin:
    image: dpage/pgadmin4:4
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    entrypoint: /entrypoint.sh
    volumes:
      - type: bind
        source: ./pgadmin_servers.json
        target: /pgadmin4/servers.json
        read_only: true
    depends_on:
      - db
  sidekiq:
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    environment:
      DATABASE_URL: postgres://postgres:postgres@db
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - db
      - redis
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
  app:
    build: .
    container_name: app
    command: sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://postgres:postgres@db
      REDIS_URL: redis://redis:6379/0
    volumes:
      - active_storage:/srv/storage
    depends_on:
      - db
      - redis
  app_startup:
    build: .
    environment:
      DATABASE_URL: postgres://postgres:postgres@db
    depends_on:
      - app
    command: sh -c "rails db:create && rails db:migrate"
volumes:
  db_data:
  active_storage:
