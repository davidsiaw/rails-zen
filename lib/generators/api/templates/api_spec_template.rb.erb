# frozen_string_literal: true

require 'rails_helper'

RSpec.describe V1::<%= class_name %>, type: :request do
  context 'GET' do
    it 'returns successfully' do
      get '/api/v1/<%= resource_name_plural %>'
      expect(response.body).to eq({ result: 'ok' }.to_json)
      expect(response.status).to eq 200
    end

    it 'with id returns successfully' do
      get '/api/v1/<%= resource_name_plural %>/abc'
      expect(response.body).to eq({ result: 'ok' }.to_json)
      expect(response.status).to eq 200
    end
  end

  context 'POST' do
    it 'returns created' do
      params = {}
      <%- fields.each do |field_name, field_info| -%>
      params[:<%= field_info[:param_name] %>] = '123'
      <%- end -%>
      post '/api/v1/<%= resource_name_plural %>', params: params
      expect(response.status).to eq 201
    end
  end

  context 'PUT' do
    it 'with id returns ok' do
      params = {}
      <%- fields.each do |field_name, field_info| -%>
      params[:<%= field_info[:param_name] %>] = '123'
      <%- end -%>
      put '/api/v1/<%= resource_name_plural %>/abc', params: params
      expect(response.status).to eq 201
    end
  end

  context 'DELETE' do
    it 'with id returns ok' do
      delete '/api/v1/<%= resource_name_plural %>/abc'
      expect(response.status).to eq 204
    end
  end
end
